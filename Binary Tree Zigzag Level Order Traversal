class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>result;
        if(root == nullptr){
            return result;
        }
        int LeftToRight = 0;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int size = q.size();
            vector<int>level(size);
            for(int i = 0; i < size; i++){
                TreeNode* node = q.front();
                q.pop();
                if (LeftToRight == 0) {
                 level[i] = node->val;
                } else {
                   level[size - i - 1] = node->val;
                }

                if(node->left != nullptr){
                    q.push(node->left);
                }
                if(node->right != nullptr){
                    q.push(node->right);
                }
            }
            result.push_back(level);
            LeftToRight = !LeftToRight;
        }
        return result;
    }
};
